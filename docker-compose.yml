services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: unless-stopped
    ports:
      - 1433:1433
    env_file: .env
    volumes:
      - data:/var/opt/mssql
    healthcheck:
      test:
        [
          "CMD",
          "/opt/mssql-tools18/bin/sqlcmd",
          "-U",
          "sa",
          "-P",
          "$MSSQL_SA_PASSWORD",
          "-C",
          "-Q",
          '"SELECT 1"',
        ]
      interval: 10s

  proxy_plus_static:
    build:
      context: MeetMingler.PL
      dockerfile: Dockerfile
      args:
        SERVER_NAME: enoughcreativity.me
        API_HOSTNAME: api
        API_UPSTREAM_PORT: 8080
    volumes:
      - /etc/ssl/enoughcreativity.me.pem:/etc/ssl/enoughcreativity.me.pem:ro
      - /etc/ssl/enoughcreativity.me.key:/etc/ssl/enoughcreativity.me.key:ro
    restart: unless-stopped
    network_mode: service:gluetun
    depends_on:
      - api

  gluetun:
    image: qmcgaw/gluetun:latest
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - "443:443"
    volumes:
      - /etc/wireguard/meetmingler-server.conf:/gluetun/wireguard/wg0.conf:ro
    links:
      - api
    environment:
      VPN_SERVICE_PROVIDER: custom
      VPN_TYPE: wireguard
      FIREWALL_VPN_INPUT_PORTS: 443

  api:
    build:
      context: MeetMingler
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - dpkeys:/root/.aspnet/DataProtection-Keys
      - ./MeetMingler/MeetMingler.WebHost/appsettings.json:/App/appsettings.json:ro
    ports:
      - "8080:8080"

volumes:
  dpkeys:
  data:
